# Deployment for Ghost
- name: Deploy Ghost
  kubernetes.core.k8s:
    state: present
    namespace: "{{ ghost_namespace }}"
    kind: Deployment
    definition:
      apiVersion: apps/v1
      metadata:
        name: ghost-deployment
        labels:
          app: ghost
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: ghost
        template:
          metadata:
            labels:
              app: ghost
          spec:
            containers:
            - name: ghost
              image: ghost:5.14.1
              env: # The variables below could be set on a ConfigMap object
              - name: database__client
                value: mysql
              - name: database__connection__host
                value: "{{ ghost_db_host }}"
              - name: database__connection__user
                value: "{{ ghost_db_user }}"
              - name: database__connection_port
                value: "3306"
              - name: database__connection__database
                value: "{{ ghost_db_name }}"
              - name: database__connection__password
                value: my_epic_password
                #value: \$2b\$10\$IT1m1RdpubBI/umopBHHguN.DSaA0pMYGxNDVfyw/NGf/9YuF6vw2
                #- name: url
                #  value: http://grupo12ascn:2368
              ports:
              - containerPort: "{{ ghost_port }}"


# Service for exposing Ghost
- name: Expose Ghost
  kubernetes.core.k8s:
    state: present
    namespace: "{{ ghost_namespace }}"
    kind: Service
    definition:
      apiVersion: v1
      metadata:
        name: ghost-service # logical name of the service, which will also become the DNS name of the service when it is created.
        labels:
          app: ghost
      spec:
        type: LoadBalancer
        selector:
          app: ghost
        ports:
          - name: http
            targetPort: "{{ ghost_port }}" # port that containers are listening on
            port: 2368 # port number exposed internally in the cluster
      status:
        loadBalancer:
          ingress:
          - ip: "{{ ghost_ip }}"

